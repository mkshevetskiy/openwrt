--- a/drivers/net/ethernet/airoha/airoha_eth.c
+++ b/drivers/net/ethernet/airoha/airoha_eth.c
@@ -1222,7 +1222,7 @@ static int airoha_qdma_init_hfwd_queues(
 	dma_addr_t dma_addr;
 	const char *name;
 	int size, index;
-	u32 status, val;
+	u32 status;
 
 	size = HW_DSCP_NUM * sizeof(struct airoha_qdma_fwd_desc);
 	if (!dmam_alloc_coherent(eth->dev, size, &dma_addr, GFP_KERNEL))
@@ -1236,7 +1236,7 @@ static int airoha_qdma_init_hfwd_queues(
 
 	index = of_property_match_string(eth->dev->of_node,
 					 "memory-region-names", name);
-	if (index >= 0) { /* buffers in sram */
+	if (index >= 0) {
 		struct reserved_mem *rmem;
 		struct device_node *np;
 
@@ -1263,13 +1263,11 @@ static int airoha_qdma_init_hfwd_queues(
 	airoha_qdma_rmw(qdma, REG_FWD_DSCP_LOW_THR, FWD_DSCP_LOW_THR_MASK,
 			FIELD_PREP(FWD_DSCP_LOW_THR_MASK, 128));
 
-	val = FIELD_PREP(HW_FWD_DESC_NUM_MASK, HW_DSCP_NUM) |
-	      LMGR_INIT_START;
-	if (index >= 0)
-		val |= LMGR_SRAM_MODE_MASK;
 	airoha_qdma_rmw(qdma, REG_LMGR_INIT_CFG,
 			LMGR_INIT_START | LMGR_SRAM_MODE_MASK |
-			HW_FWD_DESC_NUM_MASK, val);
+			HW_FWD_DESC_NUM_MASK,
+			FIELD_PREP(HW_FWD_DESC_NUM_MASK, HW_DSCP_NUM) |
+			LMGR_INIT_START | LMGR_SRAM_MODE_MASK);
 
 	return read_poll_timeout(airoha_qdma_rr, status,
 				 !(status & LMGR_INIT_START), USEC_PER_MSEC,
--- a/drivers/net/ethernet/airoha/airoha_ppe.c
+++ b/drivers/net/ethernet/airoha/airoha_ppe.c
@@ -282,7 +282,7 @@ static int airoha_ppe_foe_entry_prepare(
 						info.wcid);
 		} else {
 			struct airoha_gdm_port *port = netdev_priv(dev);
-			u32 qid, channel, lmgr_conf;
+			u32 qid, channel;
 			u8 pse_port;
 
 			if (!airoha_is_valid_gdm_port(eth, port))
@@ -302,11 +302,7 @@ static int airoha_ppe_foe_entry_prepare(
 				val |= FIELD_PREP(AIROHA_FOE_IB2_NBQ,
 						  dsa_port);
 
-			/* Consume SRAM buffer for downlink traffic if available */
-			lmgr_conf = airoha_qdma_rr(port->qdma,
-						   REG_LMGR_INIT_CFG);
-			if (FIELD_GET(LMGR_SRAM_MODE_MASK, lmgr_conf) &&
-			    airhoa_is_lan_gdm_port(eth, port))
+			if (airhoa_is_lan_gdm_port(eth, port))
 				val |= AIROHA_FOE_IB2_FAST_PATH;
 
 			channel = dsa_port >= 0 ? dsa_port : port->id;
