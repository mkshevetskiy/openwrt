From c1f0cda49e7bd2005871f887a116a7cddc6ff55a Mon Sep 17 00:00:00 2001
Message-ID: <c1f0cda49e7bd2005871f887a116a7cddc6ff55a.1738452112.git.lorenzo@kernel.org>
In-Reply-To: <bc341c91bf9f6363f16bb2c8c508e133e8aa7d36.1738452112.git.lorenzo@kernel.org>
References: <bc341c91bf9f6363f16bb2c8c508e133e8aa7d36.1738452112.git.lorenzo@kernel.org>
From: Lorenzo Bianconi <lorenzo@kernel.org>
Date: Tue, 28 Jan 2025 10:22:09 +0100
Subject: [PATCH net-next 9/9] net: airoha: Integrate QoS support for traffic
 accelerator

Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
---
 drivers/net/ethernet/airoha/airoha_ppe.c | 19 +++++++++++++++----
 1 file changed, 15 insertions(+), 4 deletions(-)

--- a/drivers/net/ethernet/airoha/airoha_ppe.c
+++ b/drivers/net/ethernet/airoha/airoha_ppe.c
@@ -274,7 +274,7 @@ static int airoha_ppe_foe_entry_prepare(
 					struct airoha_foe_entry *hwe,
 					struct net_device *dev, int type,
 					struct airoha_flow_data *data,
-					int l4proto)
+					int l4proto, u32 priority)
 {
 	u32 qdata = FIELD_PREP(AIROHA_FOE_SHAPER_ID, 0x7f), ports_pad, val;
 	int wlan_etype = -EINVAL, dsa_port = airoha_get_dsa_port(&dev);
@@ -301,12 +301,15 @@ static int airoha_ppe_foe_entry_prepare(
 			       FIELD_PREP(AIROHA_FOE_IB2_PSE_PORT,
 					  FE_PSE_PORT_CDM4);
 			qdata |= FIELD_PREP(AIROHA_FOE_ACTDP, info.bss);
-			wlan_etype = FIELD_PREP(AIROHA_FOE_MAC_WDMA_BAND,
+			wlan_etype = FIELD_PREP(AIROHA_FOE_MAC_WDMA_QOS,
+						priority) |
+				     FIELD_PREP(AIROHA_FOE_MAC_WDMA_BAND,
 						info.idx) |
 				     FIELD_PREP(AIROHA_FOE_MAC_WDMA_WCID,
 						info.wcid);
 		} else {
 			struct airoha_gdm_port *port = netdev_priv(dev);
+			u32 qid, channel;
 			u8 pse_port;
 
 			if (!airoha_is_valid_gdm_port(eth, port))
@@ -322,6 +325,14 @@ static int airoha_ppe_foe_entry_prepare(
 
 			val |= FIELD_PREP(AIROHA_FOE_IB2_PSE_PORT, pse_port) |
 			       AIROHA_FOE_IB2_PSE_QOS;
+
+			channel = dsa_port >= 0 ? dsa_port : port->id;
+			channel = channel % AIROHA_NUM_QOS_CHANNELS;
+
+			priority = priority % AIROHA_NUM_QOS_QUEUES;
+			qid = (AIROHA_NUM_QOS_QUEUES - 1) - priority;
+			qdata |= FIELD_PREP(AIROHA_FOE_CHANNEL, channel) |
+				 FIELD_PREP(AIROHA_FOE_QID, qid);
 			/* For downlink traffic consume SRAM memory for hw
 			 * forwarding descriptors queue.
 			 */
@@ -1015,6 +1026,7 @@ static int airoha_ppe_flow_offload_repla
 	struct airoha_foe_entry hwe;
 	int err, i, offload_type;
 	u16 addr_type = 0;
+	u32 priority = 0;
 	u8 l4proto = 0;
 
 	if (rhashtable_lookup(&eth->flow_table, &f->cookie,
@@ -1100,6 +1112,9 @@ static int airoha_ppe_flow_offload_repla
 			data.pppoe.sid = act->pppoe.sid;
 			data.pppoe.num++;
 			break;
+		case FLOW_ACTION_PRIORITY:
+			priority = act->priority;
+			break;
 		default:
 			return -EOPNOTSUPP;
 		}
@@ -1110,7 +1125,7 @@ static int airoha_ppe_flow_offload_repla
 		return -EINVAL;
 
 	err = airoha_ppe_foe_entry_prepare(eth, &hwe, odev, offload_type,
-					   &data, l4proto);
+					   &data, l4proto, priority);
 	if (err)
 		return err;
 
