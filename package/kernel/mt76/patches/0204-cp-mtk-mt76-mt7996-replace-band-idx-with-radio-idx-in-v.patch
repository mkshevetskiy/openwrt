diff -uNr old/mt7996/mt7996.h new/mt7996/mt7996.h
--- old/mt7996/mt7996.h	2025-08-19 18:25:56.800438000 +0800
+++ new/mt7996/mt7996.h	2025-08-21 16:43:50.211882000 +0800
@@ -1055,6 +1055,15 @@
 }
 
 static inline bool
+mt7996_radio_valid(struct mt7996_dev *dev, u8 radio)
+{
+	if (radio >= dev->mt76.hw->wiphy->n_radio ||
+	    !dev->radio_phy[radio])
+		return false;
+	return true;
+}
+
+static inline bool
 mt7996_has_background_radar(struct mt7996_dev *dev)
 {
 	switch (mt76_chip(&dev->mt76)) {
diff -uNr old/mt7996/vendor.c new/mt7996/vendor.c
--- old/mt7996/vendor.c	2025-08-19 18:25:54.106366000 +0800
+++ new/mt7996/vendor.c	2025-08-21 16:54:16.640069000 +0800
@@ -16,7 +16,7 @@
 	[MTK_VENDOR_ATTR_MU_CTRL_ONOFF] = {.type = NLA_U8 },
 	[MTK_VENDOR_ATTR_MU_CTRL_DUMP] = {.type = NLA_U8 },
 	[MTK_VENDOR_ATTR_MU_CTRL_STRUCT] = {.type = NLA_BINARY },
-	[MTK_VENDOR_ATTR_MU_CTRL_BAND_IDX] = {.type = NLA_U8 },
+	[MTK_VENDOR_ATTR_MU_CTRL_RADIO_IDX] = {.type = NLA_U8 },
 };
 
 static const struct nla_policy
@@ -145,7 +145,7 @@
 
 static const struct nla_policy
 csi_ctrl_policy[NUM_MTK_VENDOR_ATTRS_CSI_CTRL] = {
-	[MTK_VENDOR_ATTR_CSI_CTRL_BAND_IDX] = { .type = NLA_U8 },
+	[MTK_VENDOR_ATTR_CSI_CTRL_RADIO_IDX] = { .type = NLA_U8 },
 	[MTK_VENDOR_ATTR_CSI_CTRL_CFG] = {.type = NLA_NESTED },
 	[MTK_VENDOR_ATTR_CSI_CTRL_CFG_MODE] = { .type = NLA_U8 },
 	[MTK_VENDOR_ATTR_CSI_CTRL_CFG_TYPE] = { .type = NLA_U8 },
@@ -180,10 +180,11 @@
 {
 	struct ieee80211_hw *hw = wiphy_to_ieee80211_hw(wiphy);
 	struct nlattr *tb[NUM_MTK_VENDOR_ATTRS_MU_CTRL];
-	struct mt7996_phy *phy = mt7996_hw_phy(hw);
+	struct mt7996_dev *dev = mt7996_hw_dev(hw);
+	struct mt7996_phy *phy;
 	struct mt7996_muru *muru;
 	int err;
-	u8 val8, band_idx;
+	u8 val8, radio_idx;
 	u32 val32 = 0;
 
 	err = nla_parse(tb, MTK_VENDOR_ATTR_MU_CTRL_MAX, data, data_len,
@@ -192,12 +193,15 @@
 		return err;
 
 	if (tb[MTK_VENDOR_ATTR_MU_CTRL_ONOFF] &&
-	    tb[MTK_VENDOR_ATTR_MU_CTRL_BAND_IDX]) {
+	    tb[MTK_VENDOR_ATTR_MU_CTRL_RADIO_IDX]) {
 		val8 = nla_get_u8(tb[MTK_VENDOR_ATTR_MU_CTRL_ONOFF]);
-		band_idx = nla_get_u8(tb[MTK_VENDOR_ATTR_MU_CTRL_BAND_IDX]);
+		radio_idx = nla_get_u8(tb[MTK_VENDOR_ATTR_MU_CTRL_RADIO_IDX]);
+		if (!mt7996_radio_valid(dev, radio_idx))
+			return -EINVAL;
+		phy = dev->radio_phy[radio_idx];
 		val32 |= FIELD_PREP(RATE_CFG_MODE, RATE_PARAM_AUTO_MU) |
 			 FIELD_PREP(RATE_CFG_VAL, val8) |
-			 FIELD_PREP(RATE_CFG_BAND_IDX, band_idx);
+			 FIELD_PREP(RATE_CFG_BAND_IDX, phy->mt76->band_idx);
 		ieee80211_iterate_active_interfaces_atomic(hw, IEEE80211_IFACE_ITER_RESUME_ALL,
 							   mt7996_set_wireless_vif, &val32);
 	} else if (tb[MTK_VENDOR_ATTR_MU_CTRL_STRUCT]) {
@@ -206,7 +210,7 @@
 		nla_memcpy(muru, tb[MTK_VENDOR_ATTR_MU_CTRL_STRUCT],
 			   sizeof(struct mt7996_muru));
 
-		err = mt7996_mcu_set_muru_cfg(phy->dev, muru);
+		err = mt7996_mcu_set_muru_cfg(dev, muru);
 		kfree(muru);
 	}
 
@@ -221,10 +225,10 @@
 	struct ieee80211_hw *hw = wiphy_to_ieee80211_hw(wiphy);
 	struct mt7996_dev *dev = mt7996_hw_dev(hw);
 	struct mt7996_phy *phy;
-	struct mt76_phy *mphy;
+	//struct mt76_phy *mphy;
 	struct nlattr *tb[NUM_MTK_VENDOR_ATTRS_MU_CTRL];
 	int len = 0, err;
-	u8 band_idx;
+	u8 radio_idx;
 
 	if (*storage == 1)
 		return -ENOENT;
@@ -235,18 +239,14 @@
 	if (err)
 		return err;
 
-	if (!tb[MTK_VENDOR_ATTR_MU_CTRL_BAND_IDX])
+	if (!tb[MTK_VENDOR_ATTR_MU_CTRL_RADIO_IDX])
 		return -EINVAL;
 
-	band_idx = nla_get_u8(tb[MTK_VENDOR_ATTR_MU_CTRL_BAND_IDX]);
-	if (!mt7996_band_valid(dev, band_idx))
+	radio_idx = nla_get_u8(tb[MTK_VENDOR_ATTR_MU_CTRL_RADIO_IDX]);
+	if (!mt7996_radio_valid(dev, radio_idx))
 		goto error;
 
-	mphy = dev->mt76.phys[band_idx];
-	if (!mphy)
-		goto error;
-
-	phy = (struct mt7996_phy *)mphy->priv;
+	phy = dev->radio_phy[radio_idx];
 
 	if (nla_put_u8(skb, MTK_VENDOR_ATTR_MU_CTRL_DUMP, phy->muru_onoff))
 		return -ENOMEM;
@@ -255,7 +255,7 @@
 	return len;
 
 error:
-	dev_err(dev->mt76.dev, "Invalid band idx to dump\n");
+	dev_err(dev->mt76.dev, "Invalid radio idx to dump\n");
 	return -EINVAL;
 }
 
@@ -1256,9 +1256,9 @@
 	struct ieee80211_hw *hw = wiphy_to_ieee80211_hw(wiphy);
 	struct mt7996_dev *dev = mt7996_hw_dev(hw);
 	struct mt7996_phy *phy;
-	struct mt76_phy *mphy;
+	//struct mt76_phy *mphy;
 	struct nlattr *tb[NUM_MTK_VENDOR_ATTRS_CSI_CTRL];
-	u8 band_idx = 0;
+	u8 radio_idx = 0;
 	int err;
 
 	err = nla_parse(tb, MTK_VENDOR_ATTR_CSI_CTRL_MAX, data, data_len,
@@ -1266,20 +1266,12 @@
 	if (err)
 		return err;
 
-	if (tb[MTK_VENDOR_ATTR_CSI_CTRL_BAND_IDX])
-		band_idx = nla_get_u8(tb[MTK_VENDOR_ATTR_CSI_CTRL_BAND_IDX]);
-
-	if (!mt7996_band_valid(dev, band_idx))
-		goto error;
-
-	mphy = dev->mt76.phys[band_idx];
-	if (!mphy)
-		goto error;
-
-	phy = (struct mt7996_phy *)mphy->priv;
-	if (!phy)
+	if (tb[MTK_VENDOR_ATTR_CSI_CTRL_RADIO_IDX])
+		radio_idx = nla_get_u8(tb[MTK_VENDOR_ATTR_CSI_CTRL_RADIO_IDX]);
+	
+	if (!mt7996_radio_valid(dev, radio_idx))
 		goto error;
-
+	phy = dev->radio_phy[radio_idx];
 	if (tb[MTK_VENDOR_ATTR_CSI_CTRL_CFG]) {
 		u8 mode = 0, type = 0, v1 = 0;
 		u32 v2 = 0;
@@ -1345,7 +1337,7 @@
 	return 0;
 
 error:
-	dev_err(dev->mt76.dev, "Invalid band idx: %d\n", band_idx);
+	dev_err(dev->mt76.dev, "Invalid radio idx: %d\n", radio_idx);
 	return -EINVAL;
 }
 
@@ -1358,9 +1350,9 @@
 	struct ieee80211_hw *hw = wiphy_to_ieee80211_hw(wiphy);
 	struct mt7996_dev *dev = mt7996_hw_dev(hw);
 	struct mt7996_phy *phy;
-	struct mt76_phy *mphy;
+	//struct mt76_phy *mphy;
 	struct nlattr *tb[NUM_MTK_VENDOR_ATTRS_CSI_CTRL] = {0};
-	u8 band_idx = 0;
+	u8 radio_idx = 0;
 	int err = 0;
 
 	if (*storage & RESERVED_SET) {
@@ -1376,19 +1368,12 @@
 			return err;
 	}
 
-	if (tb[MTK_VENDOR_ATTR_CSI_CTRL_BAND_IDX])
-		band_idx = nla_get_u8(tb[MTK_VENDOR_ATTR_CSI_CTRL_BAND_IDX]);
-
-	if (!mt7996_band_valid(dev, band_idx))
-		return -EINVAL;
-
-	mphy = dev->mt76.phys[band_idx];
-	if (!mphy)
-		return -EINVAL;
+	if (tb[MTK_VENDOR_ATTR_CSI_CTRL_RADIO_IDX])
+		radio_idx = nla_get_u8(tb[MTK_VENDOR_ATTR_CSI_CTRL_RADIO_IDX]);
 
-	phy = (struct mt7996_phy *)mphy->priv;
-	if (!phy)
+	if (!mt7996_radio_valid(dev, radio_idx))
 		return -EINVAL;
+	phy = dev->radio_phy[radio_idx];
 
 	if (!(*storage & RESERVED_SET) && tb[MTK_VENDOR_ATTR_CSI_CTRL_DUMP_NUM]) {
 		*storage = nla_get_u16(tb[MTK_VENDOR_ATTR_CSI_CTRL_DUMP_NUM]);
diff -uNr old/mt7996/vendor.h new/mt7996/vendor.h
--- old/mt7996/vendor.h	2025-08-19 18:25:53.428426000 +0800
+++ new/mt7996/vendor.h	2025-08-21 17:03:51.346829000 +0800
@@ -76,7 +76,7 @@
 	MTK_VENDOR_ATTR_MU_CTRL_ONOFF,
 	MTK_VENDOR_ATTR_MU_CTRL_DUMP,
 	MTK_VENDOR_ATTR_MU_CTRL_STRUCT,
-	MTK_VENDOR_ATTR_MU_CTRL_BAND_IDX,
+	MTK_VENDOR_ATTR_MU_CTRL_RADIO_IDX,
 
 	/* keep last */
 	NUM_MTK_VENDOR_ATTRS_MU_CTRL,
@@ -293,7 +293,7 @@
 
 	MTK_VENDOR_ATTR_CSI_CTRL_DATA,
 
-	MTK_VENDOR_ATTR_CSI_CTRL_BAND_IDX,
+	MTK_VENDOR_ATTR_CSI_CTRL_RADIO_IDX,
 
 	/* keep last */
 	NUM_MTK_VENDOR_ATTRS_CSI_CTRL,
