--- a/npu.c
+++ b/npu.c
@@ -143,7 +143,7 @@ void mt76_npu_check_ppe(struct mt76_dev
 	reason = FIELD_GET(NPU_RX_DMA_CRSN_MASK, info);
 	if (reason == PPE_CPU_REASON_HIT_UNBIND_RATE_REACHED) {
 		skb_set_mac_header(skb, 0);
-		ppe_dev->ops.check_skb(ppe_dev, skb, hash, true);
+		airoha_ppe_dev_check_skb(ppe_dev, skb, hash, true);
 	}
 out:
 	rcu_read_unlock();
@@ -204,13 +204,12 @@ static irqreturn_t mt76_npu_irq_handler(
 	if (!npu)
 		goto out;
 
-	/* FIXME: should we check status value */
-	//u32 status = npu->ops.wlan_get_irq(npu, index);
+	if (!airoha_npu_wlan_get_irq_status(npu, index))
+		goto out;
 
-	npu->ops.wlan_set_irq_mask(npu, index);
+	airoha_npu_wlan_set_irq_mask(npu, index);
 
-	/* FIXME: should we check status value */
-	npu->ops.wlan_irq_disable(npu, index);
+	airoha_npu_wlan_disable_irq(npu, index);
 	napi_schedule(&dev->napi[qid]);
 out:
 	rcu_read_unlock();
@@ -268,7 +267,7 @@ void mt76_npu_queue_setup(struct mt76_de
 	rcu_read_lock();
 	npu = rcu_dereference(dev->mmio.npu);
 	if (npu)
-		q->wed_regs = npu->ops.wlan_get_queue_addr(npu, qid, xmit);
+		q->wed_regs = airoha_npu_wlan_get_queue_addr(npu, qid, xmit);
 	rcu_read_unlock();
 }
 
@@ -276,21 +275,21 @@ int mt76_npu_init_rxd(struct mt76_dev *d
 {
 	u32 val;
 
-	if (npu->ops.wlan_get_rx_desc_base(npu, 0, &val)) {
+	if (airoha_npu_wlan_get_rx_desc_base(npu, 0, &val)) {
 		dev_warn(dev->dev,
 			 "failed retriving npu wlan rx ring0 addr\n");
 		return -ENOMEM;
 	}
 	writel(val, &dev->q_rx[MT_RXQ_RRO_BAND0].regs->desc_base);
 
-	if (npu->ops.wlan_get_rx_desc_base(npu, 1, &val)) {
+	if (airoha_npu_wlan_get_rx_desc_base(npu, 1, &val)) {
 		dev_warn(dev->dev,
 			 "failed retriving npu wlan rx ring1 addr\n");
 		return -ENOMEM;
 	}
 	writel(val, &dev->q_rx[MT_RXQ_RRO_BAND1].regs->desc_base);
 
-	if (npu->ops.wlan_get_rx_desc_base(npu, 9, &val)) {
+	if (airoha_npu_wlan_get_rx_desc_base(npu, 9, &val)) {
 		dev_warn(dev->dev,
 			 "failed retriving npu wlan rxdmad_c ring addr\n");
 		return -ENOMEM;
@@ -309,7 +308,7 @@ int mt76_npu_init_txd(struct mt76_dev *d
 	int i;
 
 	for (i = MT_BAND0; i < MT_BAND2; i++) {
-		if (npu->ops.wlan_get_rx_desc_base(npu, i + 5, &val)) {
+		if (airoha_npu_wlan_get_rx_desc_base(npu, i + 5, &val)) {
 			dev_warn(dev->dev,
 				 "failed retriving npu wlan tx ring addr\n");
 			continue;
@@ -321,7 +320,7 @@ int mt76_npu_init_txd(struct mt76_dev *d
 		if (!p)
 			return -ENOMEM;
 
-		if (npu->ops.wlan_set_tx_buf_space_base(npu, i, dma_addr))
+		if (airoha_npu_wlan_set_tx_buf_space_base(npu, i, dma_addr))
 			dev_warn(dev->dev,
 				 "failed setting npu wlan queue buf addr\n");
 
@@ -330,7 +329,7 @@ int mt76_npu_init_txd(struct mt76_dev *d
 		if (!p)
 			return -ENOMEM;
 
-		if (npu->ops.wlan_set_tx_buf_space_base(npu, i + 5, dma_addr))
+		if (airoha_npu_wlan_set_tx_buf_space_base(npu, i + 5, dma_addr))
 			dev_warn(dev->dev,
 				 "failed setting npu wlan tx buf addr\n");
 
@@ -339,8 +338,8 @@ int mt76_npu_init_txd(struct mt76_dev *d
 		if (!p)
 			return -ENOMEM;
 
-		if (npu->ops.wlan_set_tx_buf_space_base(npu, i + 10,
-							dma_addr))
+		if (airoha_npu_wlan_set_tx_buf_space_base(npu, i + 10,
+							  dma_addr))
 			dev_warn(dev->dev,
 				 "failed setting npu wlan tx buf base\n");
 	}
@@ -398,10 +397,10 @@ EXPORT_SYMBOL_GPL(mt76_npu_rx_queue_init
 
 void mt76_npu_init_tx_done(struct mt76_dev *dev, struct airoha_npu *npu)
 {
-	if (npu->ops.wlan_set_txrx_reg_addr(npu, 2, 0, 0, 0, 0))
+	if (airoha_npu_wlan_set_txrx_reg_addr(npu, 2, 0, 0, 0, 0))
 		dev_warn(dev->dev, "failed setting npu wlan txrx addr2\n");
 
-	if (npu->ops.wlan_set_txrx_reg_addr(npu, 7, 0, 0, 0, 0))
+	if (airoha_npu_wlan_set_txrx_reg_addr(npu, 7, 0, 0, 0, 0))
 		dev_warn(dev->dev, "failed setting npu wlan txrx addr7\n");
 }
 EXPORT_SYMBOL_GPL(mt76_npu_init_tx_done);
@@ -419,7 +418,7 @@ static int mt76_npu_setup_tc_block_cb(en
 	rcu_read_lock();
 	ppe_dev = rcu_dereference(phy->dev->mmio.ppe_dev);
 	if (ppe_dev)
-		err = ppe_dev->ops.setup_tc_block_cb(ppe_dev, type_data);
+		err = airoha_ppe_dev_setup_tc_block_cb(ppe_dev, type_data);
 	rcu_read_unlock();
 
         return err;
--- a/mt7996/mmio.c
+++ b/mt7996/mmio.c
@@ -729,7 +729,7 @@ static void mt7996_rx_poll_complete(stru
 
 		npu = rcu_dereference(mdev->mmio.npu);
 		if (npu)
-			npu->ops.wlan_irq_enable(npu, q - MT_RXQ_NPU0);
+			airoha_npu_wlan_enable_irq(npu, q - MT_RXQ_NPU0);
 	} else {
 		struct mt7996_dev *dev = container_of(mdev, struct mt7996_dev,
 						      mt76);
--- a/mt7996/pci.c
+++ b/mt7996/pci.c
@@ -207,7 +207,7 @@ static void mt7996_npu_pci_hw_init(struc
 	mt76_npu_init_tx_done(&dev->mt76, npu);
 
 	for (i = MT_RXQ_NPU0; i <= MT_RXQ_NPU1; i++)
-		npu->ops.wlan_irq_enable(npu, i - MT_RXQ_NPU0);
+		airoha_npu_wlan_enable_irq(npu, i - MT_RXQ_NPU0);
 out:
 	rcu_read_unlock();
 }
