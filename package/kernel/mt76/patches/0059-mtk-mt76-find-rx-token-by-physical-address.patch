From 20c58619ec20bf651a4646592bd8f7bc5ebb45c2 Mon Sep 17 00:00:00 2001
Message-ID: <20c58619ec20bf651a4646592bd8f7bc5ebb45c2.1746781039.git.lorenzo@kernel.org>
In-Reply-To: <b840c5d58386d4600544ec7e02c2c3e19ce96bc6.1746781039.git.lorenzo@kernel.org>
References: <b840c5d58386d4600544ec7e02c2c3e19ce96bc6.1746781039.git.lorenzo@kernel.org>
From: "sujuan.chen" <sujuan.chen@mediatek.com>
Date: Wed, 19 Jul 2023 10:55:09 +0800
Subject: [PATCH 059/148] mtk: mt76: find rx token by physical address

The token id in RxDMAD may be incorrect when it is not the last frame in
WED HW. Lookup correct token id by physical address in sdp0.
Add len == 0 check to drop garbage frames

Signed-off-by: Peter Chiu <chui-hao.chiu@mediatek.com>
---
 dma.c | 27 +++++++++++++++++++++++++--
 1 file changed, 25 insertions(+), 2 deletions(-)

diff --git a/dma.c b/dma.c
index 2eddbc52..e9852d78 100644
--- a/dma.c
+++ b/dma.c
@@ -446,9 +446,32 @@ mt76_dma_get_buf(struct mt76_dev *dev, struct mt76_queue *q, int idx,
 	mt76_dma_should_drop_buf(drop, ctrl, buf1, desc_info);
 
 	if (mt76_queue_is_wed_rx(q)) {
+		u32 id, find = 0;
 		u32 token = FIELD_GET(MT_DMA_CTL_TOKEN, buf1);
-		struct mt76_rxwi_cache *r = mt76_rx_token_release(dev, token);
+		struct mt76_rxwi_cache *r;
+
+		if (*more) {
+			spin_lock_bh(&dev->rx_token_lock);
+
+			idr_for_each_entry(&dev->rx_token, r, id) {
+				if (r->dma_addr == le32_to_cpu(desc->buf0)) {
+					find = 1;
+					token = id;
+
+					/* Write correct id back to DMA*/
+					u32p_replace_bits(&buf1, id,
+							  MT_DMA_CTL_TOKEN);
+					WRITE_ONCE(desc->buf1, cpu_to_le32(buf1));
+					break;
+				}
+			}
 
+			spin_unlock_bh(&dev->rx_token_lock);
+			if (!find)
+				return NULL;
+		}
+
+		r = mt76_rx_token_release(dev, token);
 		if (!r)
 			return NULL;
 
@@ -894,7 +917,7 @@ mt76_dma_rx_process(struct mt76_dev *dev, struct mt76_queue *q, int budget)
 		if (!data)
 			break;
 
-		if (drop)
+		if (drop || (len == 0))
 			goto free_frag;
 
 		if (q->rx_head)
-- 
2.49.0

