diff -uNr old/include/net/mac80211.h new/include/net/mac80211.h
--- old/include/net/mac80211.h	2025-03-03 23:05:45.441559000 +0800
+++ new/include/net/mac80211.h	2025-03-03 23:08:18.922539000 +0800
@@ -3798,6 +3798,7 @@
 	IEEE80211_RC_SUPP_RATES_CHANGED	= BIT(2),
 	IEEE80211_RC_NSS_CHANGED	= BIT(3),
 	/* Defined for mtk vendor command */
+	IEEE80211_RC_VHT_OMN_CHANGED	= BIT(6),
 	IEEE80211_RC_CODING_TYPE_CHANGED= BIT(7),
 };
 
@@ -7824,6 +7825,18 @@
 void ieee80211_crit_update_notify(struct ieee80211_vif *vif, unsigned int link_id,
 				  enum nl80211_crit_update_event event, gfp_t gfp);
 
+/**
+ * ieee80211_link_sta_cap_bw - get link STA's bandwidth capability.
+ * @pub: STA's public link specific information
+ */
+enum ieee80211_sta_rx_bandwidth
+ieee80211_link_sta_cap_bw(struct ieee80211_link_sta *pub);
+
+/**
+ * ieee80211_link_sta_cap_nss - get link STA's spatial streaming capability.
+ * @pub: STA's public link specific information
+ */
+u8 ieee80211_link_sta_cap_nss(struct ieee80211_link_sta *pub);
 
 
 #endif /* MAC80211_H */
diff -uNr old/net/mac80211/vht.c new/net/mac80211/vht.c
--- old/net/mac80211/vht.c	2024-12-27 00:16:47.000000000 +0800
+++ new/net/mac80211/vht.c	2025-03-03 23:11:36.071477000 +0800
@@ -423,6 +423,38 @@
 	return IEEE80211_STA_RX_BW_80;
 }
 
+enum ieee80211_sta_rx_bandwidth
+ieee80211_link_sta_cap_bw(struct ieee80211_link_sta *pub)
+{
+	struct sta_info *sta = container_of(pub->sta, struct sta_info, sta);
+	enum ieee80211_sta_rx_bandwidth bw;
+	struct link_sta_info *link_sta;
+
+	rcu_read_lock();
+	link_sta = rcu_dereference(sta->link[pub->link_id]);
+	bw = ieee80211_sta_cap_rx_bw(link_sta);
+	rcu_read_unlock();
+
+	return bw;
+}
+EXPORT_SYMBOL(ieee80211_link_sta_cap_bw);
+
+u8 ieee80211_link_sta_cap_nss(struct ieee80211_link_sta *pub)
+{
+	struct sta_info *sta = container_of(pub->sta, struct sta_info, sta);
+	struct link_sta_info *link_sta;
+	u8 nss;
+
+	rcu_read_lock();
+	link_sta = rcu_dereference(sta->link[pub->link_id]);
+	nss = link_sta->capa_nss;
+	rcu_read_unlock();
+
+	return nss;
+}
+EXPORT_SYMBOL(ieee80211_link_sta_cap_nss);
+
+
 enum nl80211_chan_width
 ieee80211_sta_cap_chan_bw(struct link_sta_info *link_sta)
 {
@@ -766,6 +798,7 @@
 
 	if (changed > 0) {
 		ieee80211_recalc_min_chandef(sdata, link_sta->link_id);
+		changed |= IEEE80211_RC_VHT_OMN_CHANGED;
 		rate_control_rate_update(local, sband, link_sta->sta,
 					 link_sta->link_id, changed);
 	}
