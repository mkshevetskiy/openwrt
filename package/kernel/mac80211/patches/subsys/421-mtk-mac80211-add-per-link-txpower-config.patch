diff -uNr old/include/net/cfg80211.h new/include/net/cfg80211.h
--- old/include/net/cfg80211.h	2025-03-03 23:21:55.893483000 +0800
+++ new/include/net/cfg80211.h	2025-03-03 23:27:22.924449000 +0800
@@ -4814,9 +4814,10 @@
 	int	(*set_wiphy_params)(struct wiphy *wiphy, u32 changed);
 
 	int	(*set_tx_power)(struct wiphy *wiphy, struct wireless_dev *wdev,
-				enum nl80211_tx_power_setting type, int mbm);
+				unsigned int link_id, enum nl80211_tx_power_setting type,
+				int mbm);
 	int	(*get_tx_power)(struct wiphy *wiphy, struct wireless_dev *wdev,
-				int *dbm);
+				unsigned int link_id, int *dbm);
 
 	void	(*rfkill_poll)(struct wiphy *wiphy);
 
diff -uNr old/include/net/mac80211.h new/include/net/mac80211.h
--- old/include/net/mac80211.h	2025-03-03 23:21:55.964424000 +0800
+++ new/include/net/mac80211.h	2025-03-03 23:27:56.606531000 +0800
@@ -4794,7 +4794,7 @@
 	u32 (*get_expected_throughput)(struct ieee80211_hw *hw,
 				       struct ieee80211_sta *sta);
 	int (*get_txpower)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
-			   int *dbm);
+			   unsigned int link_id, int *dbm);
 
 	int (*tdls_channel_switch)(struct ieee80211_hw *hw,
 				   struct ieee80211_vif *vif,
diff -uNr old/net/mac80211/cfg.c new/net/mac80211/cfg.c
--- old/net/mac80211/cfg.c	2025-03-03 23:21:55.923486000 +0800
+++ new/net/mac80211/cfg.c	2025-03-03 23:35:27.219376000 +0800
@@ -3061,10 +3061,13 @@
 
 static int ieee80211_set_tx_power(struct wiphy *wiphy,
 				  struct wireless_dev *wdev,
+				  unsigned int link_id,
 				  enum nl80211_tx_power_setting type, int mbm)
 {
 	struct ieee80211_local *local = wiphy_priv(wiphy);
 	struct ieee80211_sub_if_data *sdata;
+	struct ieee80211_link_data *link;
+	struct ieee80211_bss_conf *link_conf;
 	enum nl80211_tx_power_setting txp_type = type;
 	bool update_txp_type = false;
 	bool has_monitor = false;
@@ -3074,6 +3077,11 @@
 
 	if (wdev) {
 		sdata = IEEE80211_WDEV_TO_SUB_IF(wdev);
+		link = sdata_dereference(sdata->link[link_id], sdata);
+		if (!link)
+			return -ENOLINK;
+		
+		link_conf = link->conf;
 
 		if (sdata->vif.type == NL80211_IFTYPE_MONITOR &&
 		    !ieee80211_hw_check(&local->hw, NO_VIRTUAL_MONITOR)) {
@@ -3163,19 +3171,24 @@
 
 static int ieee80211_get_tx_power(struct wiphy *wiphy,
 				  struct wireless_dev *wdev,
-				  int *dbm)
+				  unsigned int link_id, int *dbm)
 {
 	struct ieee80211_local *local = wiphy_priv(wiphy);
 	struct ieee80211_sub_if_data *sdata = IEEE80211_WDEV_TO_SUB_IF(wdev);
-
+	struct ieee80211_link_data *link;
 	if (local->ops->get_txpower &&
-	    (sdata->flags & IEEE80211_SDATA_IN_DRIVER))
-		return drv_get_txpower(local, sdata, dbm);
+    	(sdata->flags & IEEE80211_SDATA_IN_DRIVER))
+		return drv_get_txpower(local, sdata, link_id, dbm);
+
+	*dbm = local->hw.conf.power_level;
+	if (!local->emulate_chanctx) {
+		link = sdata_dereference(sdata->link[link_id], sdata);
+		if (!link)
+			return -ENOLINK;
+	
+		*dbm = link->conf->txpower;
+	}
 
-	if (local->emulate_chanctx)
-		*dbm = local->hw.conf.power_level;
-	else
-		*dbm = sdata->vif.bss_conf.txpower;
 
 	/* INT_MIN indicates no power level was set yet */
 	if (*dbm == INT_MIN)
diff -uNr old/net/mac80211/driver-ops.h new/net/mac80211/driver-ops.h
--- old/net/mac80211/driver-ops.h	2025-03-03 23:21:55.785451000 +0800
+++ new/net/mac80211/driver-ops.h	2025-03-03 23:36:49.114397000 +0800
@@ -1292,7 +1292,8 @@
 }
 
 static inline int drv_get_txpower(struct ieee80211_local *local,
-				  struct ieee80211_sub_if_data *sdata, int *dbm)
+				  struct ieee80211_sub_if_data *sdata,
+				  unsigned int link_id, int *dbm)
 {
 	int ret;
 
@@ -1302,8 +1303,8 @@
 	if (!local->ops->get_txpower)
 		return -EOPNOTSUPP;
 
-	ret = local->ops->get_txpower(&local->hw, &sdata->vif, dbm);
-	trace_drv_get_txpower(local, sdata, *dbm, ret);
+	ret = local->ops->get_txpower(&local->hw, &sdata->vif, link_id, dbm);
+	trace_drv_get_txpower(local, sdata, link_id, *dbm, ret);
 
 	return ret;
 }
diff -uNr old/net/mac80211/link.c new/net/mac80211/link.c
--- old/net/mac80211/link.c	2025-03-03 23:21:54.638443000 +0800
+++ new/net/mac80211/link.c	2025-03-03 23:38:09.168380000 +0800
@@ -36,6 +36,8 @@
 	link->conf = link_conf;
 	link_conf->link_id = link_id;
 	link_conf->vif = &sdata->vif;
+	link->user_power_level = IEEE80211_UNSET_POWER_LEVEL;
+	link->ap_power_level = IEEE80211_UNSET_POWER_LEVEL;
 
 	wiphy_work_init(&link->csa.finalize_work,
 			ieee80211_csa_finalize_work);
diff -uNr old/net/mac80211/trace.h new/net/mac80211/trace.h
--- old/net/mac80211/trace.h	2025-03-03 23:21:55.797447000 +0800
+++ new/net/mac80211/trace.h	2025-03-03 23:40:28.274351000 +0800
@@ -2174,13 +2174,14 @@
 TRACE_EVENT(drv_get_txpower,
 	TP_PROTO(struct ieee80211_local *local,
 		 struct ieee80211_sub_if_data *sdata,
-		 int dbm, int ret),
+		 unsigned int link_id, int dbm, int ret),
 
-	TP_ARGS(local, sdata, dbm, ret),
+	TP_ARGS(local, sdata, link_id, dbm, ret),
 
 	TP_STRUCT__entry(
 		LOCAL_ENTRY
 		VIF_ENTRY
+		__field(unsigned int, link_id)
 		__field(int, dbm)
 		__field(int, ret)
 	),
@@ -2188,13 +2189,14 @@
 	TP_fast_assign(
 		LOCAL_ASSIGN;
 		VIF_ASSIGN;
+		__entry->link_id = link_id;
 		__entry->dbm = dbm;
 		__entry->ret = ret;
 	),
 
 	TP_printk(
-		LOCAL_PR_FMT VIF_PR_FMT " dbm:%d ret:%d",
-		LOCAL_PR_ARG, VIF_PR_ARG, __entry->dbm, __entry->ret
+		LOCAL_PR_FMT VIF_PR_FMT " link_id:%d dbm:%d ret:%d",
+		LOCAL_PR_ARG, VIF_PR_ARG, __entry->link_id, __entry->dbm, __entry->ret
 	)
 );
 
diff -uNr old/net/wireless/nl80211.c new/net/wireless/nl80211.c
--- old/net/wireless/nl80211.c	2025-03-03 23:21:55.997455000 +0800
+++ new/net/wireless/nl80211.c	2025-03-03 23:44:54.964327000 +0800
@@ -3733,7 +3733,7 @@
 		struct wireless_dev *txp_wdev = wdev;
 		enum nl80211_tx_power_setting type;
 		int idx, mbm = 0;
-
+		unsigned int link_id = nl80211_link_id(info->attrs);
 		if (!(rdev->wiphy.features & NL80211_FEATURE_VIF_TXPOWER))
 			txp_wdev = NULL;
 
@@ -3756,7 +3756,7 @@
 			mbm = nla_get_u32(info->attrs[idx]);
 		}
 
-		result = rdev_set_tx_power(rdev, txp_wdev, type, mbm);
+		result = rdev_set_tx_power(rdev, txp_wdev, link_id, type, mbm);
 		if (result)
 			goto out;
 	}
@@ -4028,10 +4028,10 @@
 			goto nla_put_failure;
 	}
 
-	if (rdev->ops->get_tx_power) {
+	if (!wdev->valid_links && rdev->ops->get_tx_power) {
 		int dbm, ret;
 
-		ret = rdev_get_tx_power(rdev, wdev, &dbm);
+		ret = rdev_get_tx_power(rdev, wdev, 0, &dbm);
 		if (ret == 0 &&
 		    nla_put_u32(msg, NL80211_ATTR_WIPHY_TX_POWER_LEVEL,
 				DBM_TO_MBM(dbm)))
@@ -4099,6 +4099,15 @@
 			ret = rdev_get_channel(rdev, wdev, link_id, &chandef);
 			if (ret == 0 && nl80211_send_chandef(msg, &chandef))
 				goto nla_put_failure;
+			if (rdev->ops->get_tx_power) {
+				int dbm, ret;
+			
+				ret = rdev_get_tx_power(rdev, wdev, link_id, &dbm);
+				if (ret == 0 &&
+					nla_put_u32(msg, NL80211_ATTR_WIPHY_TX_POWER_LEVEL,
+						DBM_TO_MBM(dbm)))
+					goto nla_put_failure;
+			}
 
 			nla_nest_end(msg, link);
 		}
diff -uNr old/net/wireless/rdev-ops.h new/net/wireless/rdev-ops.h
--- old/net/wireless/rdev-ops.h	2025-03-03 23:21:55.598444000 +0800
+++ new/net/wireless/rdev-ops.h	2025-03-03 23:48:11.281342000 +0800
@@ -590,21 +590,24 @@
 
 static inline int rdev_set_tx_power(struct cfg80211_registered_device *rdev,
 				    struct wireless_dev *wdev,
+				    unsigned int link_id,
 				    enum nl80211_tx_power_setting type, int mbm)
 {
 	int ret;
-	trace_rdev_set_tx_power(&rdev->wiphy, wdev, type, mbm);
-	ret = rdev->ops->set_tx_power(&rdev->wiphy, wdev, type, mbm);
+	trace_rdev_set_tx_power(&rdev->wiphy, wdev, link_id, type, mbm);
+	ret = rdev->ops->set_tx_power(&rdev->wiphy, wdev, link_id, type, mbm);
+
 	trace_rdev_return_int(&rdev->wiphy, ret);
 	return ret;
 }
 
 static inline int rdev_get_tx_power(struct cfg80211_registered_device *rdev,
-				    struct wireless_dev *wdev, int *dbm)
+				     struct wireless_dev *wdev, unsigned int link_id, int *dbm)
 {
 	int ret;
-	trace_rdev_get_tx_power(&rdev->wiphy, wdev);
-	ret = rdev->ops->get_tx_power(&rdev->wiphy, wdev, dbm);
+	trace_rdev_get_tx_power(&rdev->wiphy, wdev, link_id);
+	ret = rdev->ops->get_tx_power(&rdev->wiphy, wdev, link_id, dbm);
+
 	trace_rdev_return_int_int(&rdev->wiphy, ret, *dbm);
 	return ret;
 }
diff -uNr old/net/wireless/trace.h new/net/wireless/trace.h
--- old/net/wireless/trace.h	2025-03-03 23:21:55.878486000 +0800
+++ new/net/wireless/trace.h	2025-03-03 23:51:08.937317000 +0800
@@ -1690,29 +1690,47 @@
 		  WIPHY_PR_ARG, __entry->changed)
 );
 
-DEFINE_EVENT(wiphy_wdev_evt, rdev_get_tx_power,
-	TP_PROTO(struct wiphy *wiphy, struct wireless_dev *wdev),
-	TP_ARGS(wiphy, wdev)
+TRACE_EVENT(rdev_get_tx_power,
+	TP_PROTO(struct wiphy *wiphy, struct wireless_dev *wdev,
+		 unsigned int link_id),
+	TP_ARGS(wiphy, wdev, link_id),
+	TP_STRUCT__entry(
+		WIPHY_ENTRY
+		WDEV_ENTRY
+		__field(unsigned int, link_id)
+	),
+	TP_fast_assign(
+		WIPHY_ASSIGN;
+		WDEV_ASSIGN;
+		__entry->link_id = link_id;
+	),
+	TP_printk(WIPHY_PR_FMT ", " WDEV_PR_FMT ", link_id: %d",
+		  WIPHY_PR_ARG, WDEV_PR_ARG, __entry->link_id)
+
 );
 
 TRACE_EVENT(rdev_set_tx_power,
 	TP_PROTO(struct wiphy *wiphy, struct wireless_dev *wdev,
-		 enum nl80211_tx_power_setting type, int mbm),
-	TP_ARGS(wiphy, wdev, type, mbm),
+		 unsigned int link_id, enum nl80211_tx_power_setting type,
+		 int mbm),
+	TP_ARGS(wiphy, wdev, link_id, type, mbm),
+
 	TP_STRUCT__entry(
 		WIPHY_ENTRY
 		WDEV_ENTRY
+		__field(unsigned int, link_id)
 		__field(enum nl80211_tx_power_setting, type)
 		__field(int, mbm)
 	),
 	TP_fast_assign(
 		WIPHY_ASSIGN;
 		WDEV_ASSIGN;
+		__entry->link_id = link_id;
 		__entry->type = type;
 		__entry->mbm = mbm;
 	),
-	TP_printk(WIPHY_PR_FMT ", " WDEV_PR_FMT ", type: %u, mbm: %d",
-		  WIPHY_PR_ARG, WDEV_PR_ARG,__entry->type, __entry->mbm)
+	TP_printk(WIPHY_PR_FMT ", " WDEV_PR_FMT ", link_id: %d, type: %u, mbm: %d",	 
+	WIPHY_PR_ARG, WDEV_PR_ARG, __entry->link_id, __entry->type, __entry->mbm)
 );
 
 TRACE_EVENT(rdev_return_int_int,
diff -uNr old/net/wireless/wext-compat.c new/net/wireless/wext-compat.c
--- old/net/wireless/wext-compat.c	2025-03-03 23:21:53.693482000 +0800
+++ new/net/wireless/wext-compat.c	2025-03-03 23:52:20.963303000 +0800
@@ -952,7 +952,7 @@
 	}
 
 	wiphy_lock(&rdev->wiphy);
-	ret = rdev_set_tx_power(rdev, wdev, type, DBM_TO_MBM(dbm));
+	ret = rdev_set_tx_power(rdev, wdev, 0, type, DBM_TO_MBM(dbm));
 	wiphy_unlock(&rdev->wiphy);
 
 	return ret;
@@ -975,7 +975,7 @@
 		return -EOPNOTSUPP;
 
 	wiphy_lock(&rdev->wiphy);
-	err = rdev_get_tx_power(rdev, wdev, &val);
+	err = rdev_get_tx_power(rdev, wdev, 0, &val);
 	wiphy_unlock(&rdev->wiphy);
 	if (err)
 		return err;
